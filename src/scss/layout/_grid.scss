/**
* Grid
* Minimal grid system with auto-layout columns
*/

.grid,
.ds-grid {
  display: grid;
  gap: var(--space-md);
  grid-template-columns: minmax(15rem, 1fr);

  @media (min-width: $breakpoint-sm) {
    grid-template-columns: 1fr 1fr;

    & .ds-grid-item-large {
      grid-column: span 2;
    }
  }

  @media (min-width: $breakpoint-lg) {
    grid-template-columns: 1fr 1fr 1fr;
  }

  & > * {
    min-width: 0; // HACK for childs in overflow
  }
}

.ds-flexgrid {
  
  & > * {
    margin: var(--space-md) 0;
    width: 100%;
  }

  @media (min-width: $breakpoint-sm) {
    display: flex; 
    flex-flow: row wrap; 
    gap: var(--space-md);

    & > * {
      flex: 1 0 15rem;
      margin: 0;
    }
  }

  @media (min-width: $breakpoint-md) { 
    gap: var(--space-lg);
  }

}

.ds-grid-2-1,
.ds-grid-1-2 {

  @media (max-width: $breakpoint-lg) {
    & > * {
      margin-bottom: var(--space-md);
    }
  }

  @media (min-width: $breakpoint-lg) {
    display: grid;
    gap: var(--space-md);
    margin-bottom: var(--space-md);
  }

}

.ds-grid-2-1 {

  @media (min-width: $breakpoint-lg) {
    grid-template-columns: 2fr 1fr;
    }
}

.ds-grid-1-2 {

  @media (min-width: $breakpoint-lg) {
    display: grid;
    grid-template-columns: 1fr 2fr;
    gap: var(--space-md);
  }

}

.ds-flex-row {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: flex-start;
  gap: var(--space-sm);

  & > * {
    margin: 0;
  }
}
